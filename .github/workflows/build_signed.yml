name: Build Signed APK

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-signed-apk:
    name: Build Signed APK
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.6'
          channel: 'stable'
          cache: true

      - name: Flutter Doctor
        run: flutter doctor -v

      - name: Clean previous builds
        run: flutter clean

      - name: Get dependencies
        run: flutter pub get

      - name: Run Flutter Analyze
        run: flutter analyze

      - name: Run Tests
        run: flutter test

      - name: Check if keystore secrets exist
        id: check_secrets
        run: |
          if [ -z "${{ secrets.KEYSTORE_BASE64 }}" ]; then
            echo "keystore_exists=false" >> $GITHUB_OUTPUT
            echo "Warning: Keystore secrets not found. Building unsigned APK."
          else
            echo "keystore_exists=true" >> $GITHUB_OUTPUT
          fi

      - name: Decode Keystore (if exists)
        if: steps.check_secrets.outputs.keystore_exists == 'true'
        run: echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > android/app/mykey.jks

      - name: Generate key.properties (if keystore exists)
        if: steps.check_secrets.outputs.keystore_exists == 'true'
        run: |
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=../app/mykey.jks" >> android/key.properties

      - name: Build Signed APK (if keystore exists)
        if: steps.check_secrets.outputs.keystore_exists == 'true'
        run: flutter build apk --release --verbose

      - name: Build Debug APK (if no keystore)
        if: steps.check_secrets.outputs.keystore_exists == 'false'
        run: flutter build apk --debug --verbose

      - name: Get version info
        id: version
        run: |
          VERSION=$(grep "version:" pubspec.yaml | cut -d' ' -f2)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "date=$(date +'%Y%m%d_%H%M%S')" >> $GITHUB_OUTPUT

      - name: Upload Signed APK
        if: steps.check_secrets.outputs.keystore_exists == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: signed-apk-v${{ steps.version.outputs.version }}-${{ steps.version.outputs.date }}
          path: build/app/outputs/flutter-apk/app-release.apk
          retention-days: 30

      - name: Upload Debug APK
        if: steps.check_secrets.outputs.keystore_exists == 'false'
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk-v${{ steps.version.outputs.version }}-${{ steps.version.outputs.date }}
          path: build/app/outputs/flutter-apk/app-debug.apk
          retention-days: 30

      - name: Build Summary
        run: |
          echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Flutter Version: 3.19.6" >> $GITHUB_STEP_SUMMARY
          echo "- Java Version: 17" >> $GITHUB_STEP_SUMMARY
          echo "- App Version: ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- Build Type: ${{ steps.check_secrets.outputs.keystore_exists == 'true' && 'Signed Release' || 'Debug' }}" >> $GITHUB_STEP_SUMMARY
          echo "- Build Date: ${{ steps.version.outputs.date }}" >> $GITHUB_STEP_SUMMARY
